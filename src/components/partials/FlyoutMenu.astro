---
import type { iMenu } from '~/types';

export interface Props {
	menuItems: iMenu[];
  name: string;
}

const { menuItems, name } = Astro.props
---
<div class="relative group">
  <button type="button" aria-label="button-popup" class="uppercase font-semibold flex gap-1 items-center" aria-expanded="false" aria-haspopup="true">
    <span aria-label="ministry">{name}</span>
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="w-3 h-3">
      <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
    </svg>            
  </button>
  <div class="invisible absolute -right-4 -translate-y-[4px] opacity-0 paper px-4 rounded-md group-hover:visible group-hover:opacity-100 group-hover:-translate-y-0 transition duration-[.25s]" aria-label="flyout menu">
    <div class="menu font-semibold flex flex-col w-fit" aria-label="menu">
      {
        menuItems.map((menu, idx) => {
          const common = "block whitespace-nowrap p-2 pl-0 w-full"
          const addition = " border-b border-dashed border-opacity-20 border-orange dark:border-white"
          const className = idx !== menuItems.length - 1 ? `${common} ${addition}` : common
          return (
            <a href={menu.url} data-type="menu" class={className} aria-label={menu.arialabel}>{menu.name}</a>
          )
        })
      }
    </div>
  </div>
</div>